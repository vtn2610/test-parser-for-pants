import { Option } from '../option';
import { ArrayOps } from '../lift';
declare module '../../wrapper' {
    interface ArrayOps<A> {
        flatMap: typeof flatMap;
    }
}
/**
 * Maps this Array to an Array of Array | Option | ArrayOps using a mapper function then flattens it.
 */
export declare function flatMap<A, B>(this: ArrayOps<A>, fun: (item: A, index: number) => B[]): ArrayOps<B>;
/**
 * Maps this Array to an Array of Array | Option | ArrayOps using a mapper function then flattens it.
 */
export declare function flatMap<A, B>(this: ArrayOps<A>, fun: (item: A, index: number) => ArrayOps<B>): ArrayOps<B>;
/**
 * Maps this Array to an Array of Array | Option | ArrayOps using a mapper function then flattens it.
 */
export declare function flatMap<A, B>(this: ArrayOps<A>, fun: (item: A, index: number) => Option<B>): ArrayOps<B>;
