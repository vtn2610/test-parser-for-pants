import { ArrayOps } from '../lift';
declare module '../../wrapper' {
    interface ArrayOps<A> {
        sort: typeof sort;
    }
}
export declare function sort(this: ArrayOps<string>, options?: StringSortOptions): ArrayOps<string>;
export declare function sort<A>(this: ArrayOps<A>, options: ByStringSortOptions<A>): ArrayOps<A>;
export declare function sort(this: ArrayOps<number>, options?: NumberSortOptions): ArrayOps<number>;
export declare function sort<A>(this: ArrayOps<A>, options: ByNumberSortOptions<A>): ArrayOps<A>;
export interface StringSortOptions {
    localeCompare?: boolean;
    ignoreCase?: boolean;
    reverse?: boolean;
}
export interface ByStringSortOptions<A> {
    by: (item: A) => string;
    localeCompare?: boolean;
    ignoreCase?: boolean;
    reverse?: boolean;
}
export interface NumberSortOptions {
    reverse?: boolean;
}
export interface ByNumberSortOptions<A> {
    by: (item: A) => number;
    reverse?: boolean;
}
